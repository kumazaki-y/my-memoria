%li.article-item
    .user-info
        .user-details
            - if current_user == article.user
                = link_to profile_path(id: article.user.id) do
                    = image_tag(article.user.profile.avatar.presence || 'default-avatar.png', class: 'user-image')
                %span.user-name= article.user.display_name.present? ? article.user.display_name : article.user.username
            - else
                = link_to account_path(id: article.user.id) do
                    = image_tag(article.user.profile.avatar.presence || 'default-avatar.png', class: 'user-image')
                %span.user-name= article.user.display_name.present? ? article.user.display_name : article.user.username
        - if current_user == article.user
            = link_to article_path(article), method: :delete, data: { confirm: '記事を削除してよろしいですか？' } do
                = image_tag('trash.png', alt: '削除', class: 'delete-article-button')


    %span.post-time
        = time_ago_in_words(article.created_at)


    .article-image-container
        - case article.images.count
        - when 0
            = image_tag 'default-image.png', class: 'single-image article-image', alt: 'デフォルト画像', data: { target: 'default-image.png' }
        - when 1
            = image_tag article.images.first, class: 'single-image article-image', data: { target: rails_blob_path(article.images.first, only_path: true) }
        - when 2
            = image_tag article.images.first, class: 'main-image article-image', data: { target: rails_blob_path(article.images.first, only_path: true) }
            = image_tag article.images.second, class: 'double-image article-image', data: { target: rails_blob_path(article.images.second, only_path: true) }
        - else
            = image_tag article.images.first, class: 'main-image article-image', data: { target: rails_blob_path(article.images.first, only_path: true) }
            .side-images
                - article.images[1..2].each do |image|
                    = image_tag image, class: 'side-image article-image', data: { target: rails_blob_path(image, only_path: true) }

    .modal
        .modal-content
            %img{src: "", alt: "モーダル画像", class: "modal-image"}
            %button.close{class: "modal-btn"} &times;
            %button.left-arrow{class: "modal-btn"} &lt;
            %button.right-arrow{class: "modal-btn"} &gt;


    .article-actions
        .like-icons{ 'data-article-id': article.id, 'data-is-liked': current_user.has_liked?(article) }
            = image_tag('like.png', alt: 'いいね', class: 'like-button-inactive', style: ('display: none;' if current_user.has_liked?(article)))
            = image_tag('like_red.png', alt: 'いいね済み', class: 'like-button-active', style: ('display: block;' if current_user.has_liked?(article)))
        = link_to image_tag('comment.png', alt: 'コメント', class: 'comment-button'), article_comments_path(article)
        - if article && article.content
            - x_share_url = "https://x.com/share?url=#{CGI.escape(article_url(article))}&text=#{CGI.escape(article.content)}"
        = link_to image_tag('share.png', alt: 'シェア', class: 'share-button'), x_share_url, target: "_blank"

    .article-text
        = article.content